# Starter pipeline
# Pull from Repo
# Import Project into Docekr SOAtest CLI container and Run
# Azure YAML docs:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

# Set Up Project
steps:
- script: |
    echo "Starting Pipeline Execution."
    echo "Create ./temp directory for volume mount."
    mkdir temp
    echo ${PWD}
    echo "Copy SOAtest project contents to volume directory."
    cp -R $(soatest.project) temp/.
    
    echo $"
    apiVersion: '2019-12-01'
    location: eastus
    name: file-share-demo
    properties:
    containers:
    - name: hellofiles
    properties:
    environmentVariables: []
    image: mcr.microsoft.com/azuredocs/aci-hellofiles
    ports:
    - port: 80
    resources:
    requests:
    cpu: 1.0
    memoryInGB: 1.5
    volumeMounts:
    - mountPath: /aci/logs/
    name: parasoftfiles
    osType: Linux
    restartPolicy: Always
    ipAddress:
    type: Public
    ports:
    - port: 80
    dnsNameLabel: aci-demo
    volumes:
    - name: parasoftfiles
    azureFile:
    sharename: parasoftfiles
    storageAccountName: adoproject
    storageAccountKey: liZ+KvFZBAgxHMDkb8z7MdV9NPFfma0M0EjtgFLG2Yk2InBwwkJXjGfpe5r6Ljexn8XKOnif1rrg+AStdt6c/w==
    tags: {}
    type: Microsoft.ContainerInstance/containerGroups" >>temp/deploy-aci.yml

    az container create --resource-group ADOProject_group --file deploy-aci.yaml

    # Set Up and write .properties file
    echo  -e "\n~~~\nSetting up and creating soatestcli.properties file.\n"
    echo $"
    dtp.url=$(license.server.url)
    dtp.user=admin
    dtp.password=$(license.server.password)
    dtp.share.enabled=true
    dtp.enabled=true
    dtp.project=ADO
    report.dtp.publish=true
    techsupport.advanced=false
    techsupport.auto_creation=true
    techsupport.item.environment=true
    techsupport.item.general=true
    techsupport.archive_location=/temp
    techsupport.send_email=false
    techsupport.verbose=true
    techsupport.verbose.scontrol=false
    license.network.auth.enabled=true  
    license.network.password=$(license.server.password)
    license.network.url=$(license.server.url)
    license.network.use.specified.server=true
    license.network.user=admin
    soatest.license.network.edition=automation_edition
    soatest.license.use_network=true
    virtualize.license.network.edition=performance_server_edition
    virtualize.license.use_network=true" >> temp/soatestcli.properties
    echo -e "\nDebug -- Verify workspace contents.\n"
    ls -R
    echo -e "\nDebug -- Verify soatestcli.properties file contents."
    cat temp/soatestcli.properties
    echo  -e "\n~~~\nSetting up and creating localsettings.properties file.\n"

    # Run Docker container with mount and run tests
    echo -e "\n~~~\nRun SOAtestCLI Docker container & mount ./temp volume.\n"
    
    docker --version
az container create \
    --resource-group ADOProject_group \
    --name parabank-baseline \
    --image lavanya93/parabank-baseline:2022 \
    --dns-name-label devparasoftcom \
    --ports 8080 4040\
    --azure-file-volume-account-name adoproject \
    --azure-file-volume-account-key liZ+KvFZBAgxHMDkb8z7MdV9NPFfma0M0EjtgFLG2Yk2InBwwkJXjGfpe5r6Ljexn8XKOnif1rrg+AStdt6c/w== \
    --azure-file-volume-share-name parasoftfiles \
    --azure-file-volume-mount-path /aci/logs/
az container show --resource-group ADOProject_group \
  --name parabank-baseline --query ipAddress.fqdn --output tsv

    docker run -i \
    -u 0:0 \
    -e ACCEPT_EULA=true \
    -v "$(pwd)/temp:/temp" \
    parasoft/soavirt /bin/bash -c " \
    cat /temp/soatestcli.properties; \
    soatestcli \
    -settings /temp/soatestcli.properties \
    -import /temp/$(soatest.project); \
    soatestcli \
    -resource /$(soatest.project) \
    -config 'user://Example Configuration' \
    -settings /temp/soatestcli.properties \
    -report /temp \
    -publish" \

    docker ps \
    echo -e "\nDebug -- Verify ./temp contents\n"
    ls -R $(pwd)/temp
  displayName: Run Tests
  env:
    pwd: $(Build.Repository.LocalPath)

- publish: /home/vsts/work/1/s/temp
  artifact: TSA
# Publish Test Results